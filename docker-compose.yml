version: "3"
services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /app
    volumes:
      - './:/app'
    environment:
      - "PHP_IDE_CONFIG=serverName=local"
    links:
      - redis
      - database
    networks:
      - app_network

  swagger-ui:
    image: swaggerapi/swagger-ui
    depends_on:
      - app
    ports:
      - "${APP_DOCKER_SWAGGERUI_PORT:-8081}:8080"
    environment:
      - "URLS=[ { url: '${APP_DOCKER_SWAGGERUI_URL:-http://localhost:8082/swagger.json}', name: '${APP_NAME:-App}'  }]"
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    volumes:
      - './:/app'
      - './.docker/nginx.dev/:/etc/nginx/conf.d:ro'
    ports:
      - "${APP_DOCKER_HTTP_PORT:-8082}:80"
      - "${APP_DOCKER_HTTP_SSL_PORT:-9443}:443"
    links:
      - app
      - mailhog
    networks:
      - app_network

  redis:
    image: redis:6-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    ports:
      - '${APP_DOCKER_REDIS_PORT:-46379}:6379'
    networks:
      - app_network

  mailhog:
    image: mailhog/mailhog
    restart: unless-stopped
    environment:
      MH_UI_WEB_PATH: mailhog
    networks:
      - app_network

  database:
    image: mariadb
    restart: always
    ports:
      - "${APP_DOCKER_DB_PORT:-3306}:3306"
    volumes:
      - data-volume:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=localdb
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_ROOT_HOST=%
      - MYSQL_LOG_CONSOLE=true
    networks:
      - app_network

  adminer:
    image: adminer
    restart: always
    ports:
      - "${APP_DOCKER_ADMINER_PORT:-8080}:8080"
    networks:
      - app_network

volumes:
  data-volume:
  redis-data:

networks:
  app_network:
    driver: bridge
